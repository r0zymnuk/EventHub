@using System.Globalization;
@using EventHub.Application.Dtos.Response.Event;
@using Microsoft.AspNetCore.Mvc.TagHelpers;
@model EventModel

@{
    var badgeClasses = new List<string>
    {
        "bg-blue-100 text-blue-800 text-md font-medium mr-2 px-2.5 py-0.5 rounded dark:bg-blue-900 dark:text-blue-300",
        "bg-gray-100 text-gray-800 text-md font-medium mr-2 px-2.5 py-0.5 rounded dark:bg-gray-700 dark:text-gray-300",
        "bg-red-100 text-red-800 text-md font-medium mr-2 px-2.5 py-0.5 rounded dark:bg-red-900 dark:text-red-300",
        "bg-green-100 text-green-800 text-md font-medium mr-2 px-2.5 py-0.5 rounded dark:bg-green-900 dark:text-green-300",
        "bg-yellow-100 text-yellow-800 text-md font-medium mr-2 px-2.5 py-0.5 rounded dark:bg-yellow-900 dark:text-yellow-300",
        "bg-indigo-100 text-indigo-800 text-md font-medium mr-2 px-2.5 py-0.5 rounded dark:bg-indigo-900 dark:text-indigo-300",
        "bg-purple-100 text-purple-800 text-md font-medium mr-2 px-2.5 py-0.5 rounded dark:bg-purple-900 dark:text-purple-300",
        "bg-pink-100 text-pink-800 text-md font-medium mr-2 px-2.5 py-0.5 rounded dark:bg-pink-900 dark:text-pink-300",
    };
    int badgeIndex = Random.Shared.Next(0, badgeClasses.Count);

    var categories = Model.Categories.ToArray();

    ViewData["Title"] = Model.Title;
    var imageUrl = string.IsNullOrEmpty(Model.ImageUrl) ? "https://placehold.co/1600x400" : Model.ImageUrl;
    
    ILookup<string, CultureInfo> cultureByCurrency = 
        CultureInfo.GetCultures(CultureTypes.SpecificCultures)
            .Where(x => { try { _ = new RegionInfo(x.LCID); return true; } catch { return false; }})
            .ToLookup(x => new RegionInfo(x.LCID).ISOCurrencySymbol);
    var culture = cultureByCurrency[Model.Currency].FirstOrDefault();
}

<div class="mt-[6rem] lg:mx-[10rem] md:mx-[5rem] rounded-lg h-[30rem] items-center bg-[url('@imageUrl')] bg-center bg-cover bg-no-repeat">
</div>
    @* Title & Description *@
    <section class="pt-6">
        <div class="pb-5 px-4 mx-auto max-w-screen-xl lg:pb-16 lg:px-[8rem]">
            <div class="flex space-between text-md mx-auto max-w-screen-xl">
                <span class="flex basis-1/2 gap-4 items-center mb-3 font-normal text-gray-700 dark:text-gray-400"
                    style="text-overflow: ellipsis">
                    <svg class="w-6 h-6" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none"
                        viewBox="0 0 17 21">
                        <g stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5">
                            <path d="M8 12a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z" />
                            <path
                                d="M13.8 12.938h-.01a7 7 0 1 0-11.465.144h-.016l.141.17c.1.128.2.252.3.372L8 20l5.13-6.248c.193-.209.373-.429.54-.66l.13-.154Z" />
                        </g>
                    </svg>
                    @Model.Location.City @Model.Location.Country
                </span>
                <span
                    class="flex basis-1/2 justify-end gap-4 items-center mb-3 font-normal text-gray-700 dark:text-gray-400 float-right text-right"
                    style="text-overflow: ellipsis">
                    <svg class="w-6 h-6" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none"
                            viewBox="0 0 20 20">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"
                                stroke-width="1.5"
                                d="M5 1v3m5-3v3m5-3v3M1 7h18M5 11h10M2 3h16a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Z" />
                        </svg>
                    @Model.Start.ToString("HH:mm dd MMMM yyyy") - @Model.End.ToString("HH:mm dd MMMM yyyy")
                </span>
            </div>

            <div class="flex space-between text-md mx-auto max-w-screen-xl">
                @for (int i = 0; i < categories.Length; i++)
                {
                    <form method="get" asp-action="AllEvents" asp-controller="Event">
                        <input type="hidden" name="category" value="@categories[i].Name" />
                        <button type="submit" class="@badgeClasses[badgeIndex]">@categories[i].Name</button>
                    </form>

                    badgeIndex++;
                    if (badgeIndex == badgeClasses.Count)
                    {
                        badgeIndex = 0;
                    }
                }
            </div>
            <h2 class="text-4xl font-bold dark:text-white mb-5">
                @Model.Title
            </h2>
            <p class="mb-4 text-lg font-normal text-gray-500 dark:text-gray-400">
                @Model.Description
            </p>
        </div>
    </section>
    <hr class="w-48 h-1 mx-auto bg-gray-100 border-0 rounded  dark:bg-gray-700" />
    @* Tickets *@
    <section class="">
        <div class="py-4 px-4 mx-auto max-w-screen-xl lg:px-6">
            <div class="space-y-8 lg:grid @(Model.Tickets.Count < 3 ? $"lg:grid-cols-{Model.Tickets.Count}" : "lg:grid-cols-3") sm:gap-6 xl:gap-10 lg:space-y-0">
                @foreach (var ticket in Model.Tickets)
                {
                    <!-- Pricing Card -->
                        <div class="flex flex-col p-6 mx-auto max-w-lg text-center text-gray-900 bg-white rounded-lg border border-gray-100 shadow dark:border-gray-600 xl:p-8 dark:bg-gray-800 dark:text-white">
                            <h3 class="mb-4 text-2xl font-semibold">@ticket.Name</h3>
                            @if (!string.IsNullOrWhiteSpace(ticket.Description))
                            {
                                <p class="font-light text-gray-500 sm:text-lg dark:text-gray-400">
                                    @ticket.Description
                                </p>
                            }
                            <div class="flex justify-center items-baseline my-8">
                                @* <span class="mr-2 text-5xl font-semibold">@ticket.Price.ToString($"{0} {Model.Currency}")</span> *@
                                <span class="mr-2 text-5xl font-semibold">
                                    @if (ticket.IsFree)
                                    {
                                        string.Format("Free");
                                    }
                                    else
                                    {
                                        @if(culture is not null)
                                        {
                                            string.Format(new CultureInfo(culture.Name), "{0:C2}", ticket.Price);
                                        }
                                        else
                                        {
                                            ticket.Price.ToString($"{0:C2} {Model.Currency}");
                                        }
                                    }
                                </span>
                            </div>
                            <!-- List -->
                            <ul role="list" class="mb-8 space-y-4 text-left">
                                @foreach (var f in ticket.Features)
                                {
                                    <li class="flex items-center space-x-3">
                                        <!-- Icon -->
                                        <svg class="flex-shrink-0 w-5 h-5 text-green-500 dark:text-green-400" fill="currentColor"
                                             viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                            <path fill-rule="evenodd"
                                                  d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                                                  clip-rule="evenodd"></path>
                                        </svg>
                                        <span>@f.Name</span>
                                    </li>
                                }
                            </ul>
                            <form asp-action="Purchase" asp-controller="Ticket" asp-route-eventId="@Model.Id" asp-route-ticketId="@ticket.Id" asp-route-quantity="1" method="post">
                                <button type="submit" class="text-white bg-blue-600 hover:bg-blue-700 focus:ring-4 focus:ring-blue-200 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:text-white dark:focus:ring-blue-900 @(ticket.Sold == ticket.Quantity ? "bg-gray-600 hover:bg-gray-700 focus:ring-gray-200 dark:text-white dark:focus:ring-gray-900" : "")">
                                    Get started (@(ticket.Quantity - ticket.Sold)/@ticket.Quantity)
                                </button>
                            </form>
                        </div>
                }
            </div>
        </div>
    </section>

    <hr class="w-48 h-1 mx-auto bg-gray-100 border-0 rounded md:my-10 dark:bg-gray-700" />

    <!-- Contact -->
    <section class="px-4 lg:px-[6rem]">
        <h1
            class="text-2xl text-center font-semibold tracking-tight leading-none text-gray-900 md:text-2xl lg:text-2xl dark:text-white">
            Have any questions?
        </h1>
        <div class="px-4 py-4 mx-auto max-w-screen-xl text-center z-10 relative flex">
            <div class="basis-1/3">
                <dl class="text-left text-gray-900 divide-y divide-gray-200 dark:text-white dark:divide-gray-700">
                    <div class="flex flex-col pb-3">
                        <dt class="mb-1 text-gray-500 dark:text-gray-400">
                            Email address
                        </dt>
                        <dd class="font-semibold">yourname@flowbite.com</dd>
                    </div>

                    <div class="flex flex-col py-3">
                        <dt class="mb-1 text-gray-500 dark:text-gray-400">
                            Home address
                        </dt>
                        <dd class=" font-semibold">
                            @Model.Location.ToFullString()
                        </dd>
                    </div>
                    <div class="flex flex-col pt-3">
                        <dt class="mb-1 text-gray-500 dark:text-gray-400">
                            Phone number
                        </dt>
                        <dd class=" font-semibold">
                            +00 123 456 789 / +12 345 678
                        </dd>
                    </div>
                </dl>
            </div>
            <form class="basis-2/3 px-9">
                <div
                    class="w-full mb-4 border border-gray-200 rounded-lg bg-gray-50 dark:bg-gray-700 dark:border-gray-600">
                    <div class="px-4 py-2 bg-white rounded-t-lg dark:bg-gray-800">
                        <label for="question" class="sr-only text-lg">Here you can ask your questions</label>
                        <textarea id="question" rows="4"
                            class="w-full min-h-[10rem] px-0 text-sm text-gray-900 bg-white border-0 dark:bg-gray-800 focus:ring-0 dark:text-white dark:placeholder-gray-400"
                            placeholder="Here you can ask your questions" required></textarea>
                    </div>
                    <div class="flex items-center justify-between gap-4 px-3 py-2 border-t dark:border-gray-600">
                        <div class="w-full">
                        @if (Context.User.Identity is not null && Context.User.Identity.IsAuthenticated)
                        {
                            @* <input type="email" id="email" class="hidden bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 w-full p-2 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="john.doe@company.com (If not authenticated)" value="@Context.User.FindFirst(System.Security.Claims.ClaimTypes.Email)!.Value" hidden required /> *@
                            <input type="email" id="email" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="john.doe@company.com (If not authenticated)" value="" hidden required />
                        }
                        else
                        {
                            <input type="email" id="email" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="john.doe@company.com (If not authenticated)" required />
                        }

                    </div>
                        <button type="submit"
                            class="inline-flex items-center py-2 px-6 text-sm font-medium text-center text-white bg-blue-700 rounded-lg focus:ring-4 focus:ring-blue-200 dark:focus:ring-blue-900 hover:bg-blue-800">
                            Send
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </section>